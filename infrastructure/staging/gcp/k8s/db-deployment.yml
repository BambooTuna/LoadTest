apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  ports:
  - port: 3306
    nodePort: 30306
  selector:
    app: db
  type: NodePort
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-volume
  labels:
    type: local
spec:
  storageClassName: manual
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - image: mysql:5.7.22
          name: db
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dbsecret
                  key: root_password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: dbsecret
                  key: user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dbsecret
                  key: password
          ports:
            - containerPort: 3306
              name: db
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-host-path
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: db-claim
        - name: mysql-host-path
          hostPath:
            path: ./tools/mysql/
            type: Directory