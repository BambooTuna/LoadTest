# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo

    environment:
      SBT_VERSION: 1.2.8
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            - v1-dependencies-

      - run: cat /dev/null | sbt test:compile

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      - run: cat /dev/null | sbt test:test
  deploy:
    docker:
      - image: google/cloud-sdk
    environment:
      DEPLOYMENT_YML: ./infrastructure/staging/gcp/k8s/deployment.yml
      SERVICE_YML: ./infrastructure/staging/gcp/k8s/service.yml
      GOOGLE_PROJECT_ID: loadtest-123
      GOOGLE_COMPUTE_ZONE: asia-northeast1-a
      GOOGLE_CLUSTER_NAME: loadtest-cluster
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Docker build and push
          command: |
            export DOCKER_TAG=`echo "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG}" | tr '[:upper:]' '[:lower:]'`
            docker build -t $DOCKER_TAG .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push $DOCKER_TAG
      - run:
          name: Deploy to GKE
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            gcloud --quiet container clusters get-credentials $GOOGLE_CLUSTER_NAME
            envsubst < deployment.yml > $DEPLOYMENT_YML
            kubectl apply -f $DEPLOYMENT_YML
            kubectl apply -f $SERVICE_YML

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: feature/auto-build-and-deploy